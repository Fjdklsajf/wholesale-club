#ifndef ITEM_H_
#define ITEM_H_

#include <string>

class Item {
  public:
    /******************************
     ** CONSTRUCTOR & DESTRUCTOR **
     ******************************/
    Item(std::string name, double price);

    /**************
     ** MUTATORS **
     **************/
    void setName(std::string name);
    void setPrice(double price);

    /***************
     ** ACCESSORS **
     ***************/
    std::string getName() const;
    double getPrice() const;

    /*******************************
    ** CONSTANT MEMBER FUNCTIONS **
    *******************************/
   bool operator <(const Item& item) const;

  private:
    std::string _name;
    double _price;

};
/******************************************************************************************
 *  Item Class
 *    An item containing its name price
 ******************************************************************************************/


/******************************
 ** CONSTRUCTOR & DESTRUCTOR **
 ******************************/

/******************************************************************************************
 *  Item(std::string name, double price)
 *    Constructor; initialize the member variables _name and _price
 *    Parameters: std::string, double
 *    Return: none
 ******************************************************************************************/


/**************
 ** MUTATORS **
 **************/

/******************************************************************************************
 *  void setName(std::string name);
 *
 *    Mutator; This method will update the _name attribute to the parameter name value
 * ----------------------------------------------------------------------------------------
 *    Parameters: std::string
 * ----------------------------------------------------------------------------------------
 *    Return: none
 ******************************************************************************************/

/******************************************************************************************
 *  void setPrice(double price);
 *
 *    Mutator; This method will update the _price attribute to the parameter price value
 * ----------------------------------------------------------------------------------------
 *    Parameters: double
 * ----------------------------------------------------------------------------------------
 *    Return: none
 ******************************************************************************************/


/***************
 ** ACCESSORS **
 ***************/

/******************************************************************************************
 *  std::string getName() const;
 *
 *    Accessor; This method will return _name
 * ----------------------------------------------------------------------------------------
 *    Parameters: none
 * ----------------------------------------------------------------------------------------
 *    Return: std::string
 ******************************************************************************************/

/******************************************************************************************
 *  double getPrice() const;
 *
 *    Accessor; This method will return _price
 * ----------------------------------------------------------------------------------------
 *    Parameters: none
 * ----------------------------------------------------------------------------------------
 *    Return: double
 ******************************************************************************************/


/*******************************
 ** CONSTANT MEMBER FUNCTIONS **
 *******************************/

/******************************************************************************************
 *  bool operator <(const Item& item) const;
 *
 *    Compares the item names. Return true if _name comes before parameter itme's name,
 *      false otherwise. (Needed when creating a map)
 * ----------------------------------------------------------------------------------------
 *    Parameters: const Item& item
 * ----------------------------------------------------------------------------------------
 *    Return: bool
 ******************************************************************************************/


#endif // ITEM_H_
